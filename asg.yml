Description: 
   Services reuired for the Webapp to be hosted 

Parameters:


  WorkflowID:
      Description: An environment name that will be prefixed to resource names
      Type: String
  

Resources:

  
  WebServerASGLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0574da719dca65348
      InstanceType: t2.medium
      KeyName: nada
      InstanceMonitoring: true
      SecurityGroups:
        - Fn::ImportValue:  "InstanceSecurity"
      IamInstanceProfile: 
        Fn::ImportValue:  "InstanceProfile"
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 10
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          apt update -y
          apt install nginx  awscli -y
          curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash -
          sudo apt install nodejs -y
          sudo apt install npm  -y 

          
          cd ~
          aws s3 cp s3://react-gp23--${WorkflowID}
          

          cd ~/app
          npm run build

          sudo mkdir /var/www/react-app
          sudo chown -R $USER:$USER

          cd ~/app
          cp -r build/*  /var/www/react-app

          cd /etc/nginx/sites-available
          rm -f default  
          sudo cp  ~/app/default  /etc/nginx/sites-available

          sudo systemctl restart nginx

          sudo npm install pm2@latest -g
          cd ~/app
          pm2 start --name "react-app" 




     

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
    Properties:
      LaunchConfigurationName: !Ref WebServerASGLaunchConfiguration
      MaxSize: 4
      MinSize: 2
      DesiredCapacity: 2


      VPCZoneIdentifier:
        - Fn::ImportValue:  "Private-Subnet-1"
        - Fn::ImportValue:  "Private-Subnet-2"

      TargetGroupARNs:
        - Fn::ImportValue:  "TargetGroup"



  AutoScalingPolicy:  ## The metric type to be tracked, which for simplicity will be tracking the Average CPU Utilization of the ASG instances
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 30

       
Outputs:


  WorkflowID:
    Value: !Sub ${WorkflowID}
    Description: Work flow number of old stack 
    Export:
      Name:  WorkflowID
